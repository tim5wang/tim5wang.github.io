(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-8abb"],{"4rGO":function(e,n,t){},"G/WX":function(e,n,t){"use strict";t.r(n);var i=t("VrN/"),a=t.n(i);t("p77/"),t("uGbe");t("ztCB");var r={props:{value:{type:String,required:!0},height:{type:String,required:!0}},data:function(){return{editor:!1}},watch:{value:function(e){e!==this.editor.getValue()&&this.editor.setValue(this.value)}},mounted:function(){var e=this;this.editor=a.a.fromTextArea(this.$refs.textarea,{mode:"text/x-yaml",lineNumbers:!0,lint:!0,lineWrapping:!0,tabSize:2,cursorHeight:.9,theme:"idea"}),this.editor.setSize("auto",this.height),this.editor.setValue(this.value),this.editor.on("change",function(n){e.$emit("changed",n.getValue()),e.$emit("input",n.getValue())})},methods:{getValue:function(){return this.editor.getValue()}}},o=(t("spx8"),t("KHd+")),s=Object(o.a)(r,function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"json-editor"},[n("textarea",{ref:"textarea"})])},[],!1,null,"f2df9ab0",null);s.options.__file="index.vue";var l={name:"YamlEdit",components:{Yaml:s.exports},data:function(){return{height:document.documentElement.clientHeight-210+"px",value:'# 展示数据，如需更换主题，请在src/components/YamlEdit 目录中搜索原主题名称进行替换\n\n# ===================================================================\n# Spring Boot configuration.\n#\n# This configuration will be overridden by the Spring profile you use,\n# for example application-dev.yml if you use the "dev" profile.\n#\n# More information on profiles: https://www.jhipster.tech/profiles/\n# More information on configuration properties: https://www.jhipster.tech/common-application-properties/\n# ===================================================================\n\n# ===================================================================\n# Standard Spring Boot properties.\n# Full reference is available at:\n# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html\n# ===================================================================\n\neureka:\n    client:\n        enabled: true\n        healthcheck:\n            enabled: true\n        fetch-registry: true\n        register-with-eureka: true\n        instance-info-replication-interval-seconds: 10\n        registry-fetch-interval-seconds: 10\n    instance:\n        appname: product\n        instanceId: product:${spring.application.instance-id:${random.value}}\n        #instanceId: 127.0.0.1:9080\n        lease-renewal-interval-in-seconds: 5\n        lease-expiration-duration-in-seconds: 10\n        status-page-url-path: ${management.endpoints.web.base-path}/info\n        health-check-url-path: ${management.endpoints.web.base-path}/health\n        metadata-map:\n            zone: primary # This is needed for the load balancer\n            profile: ${spring.profiles.active}\n            version: ${info.project.version:}\n            git-version: ${git.commit.id.describe:}\n            git-commit: ${git.commit.id.abbrev:}\n            git-branch: ${git.branch:}\nribbon:\n    ReadTimeout: 120000\n    ConnectTimeout: 300000\n    eureka:\n        enabled: true\nzuul:\n  host:\n    connect-timeout-millis: 5000\n    max-per-route-connections: 10000\n    max-total-connections: 5000\n    socket-timeout-millis: 60000\n  semaphore:\n    max-semaphores: 500\n\nfeign:\n    hystrix:\n        enabled: true\n    client:\n        config:\n            default:\n                connectTimeout: 500000\n                readTimeout: 500000\n\n# See https://github.com/Netflix/Hystrix/wiki/Configuration\nhystrix:\n    command:\n        default:\n            circuitBreaker:\n                sleepWindowInMilliseconds: 100000\n                forceClosed: true\n            execution:\n                isolation:\n#                    strategy: SEMAPHORE\n# See https://github.com/spring-cloud/spring-cloud-netflix/issues/1330\n                    thread:\n                        timeoutInMilliseconds: 60000\n    shareSecurityContext: true\n\nmanagement:\n    endpoints:\n        web:\n            base-path: /management\n            exposure:\n                include: ["configprops", "env", "health", "info", "threaddump"]\n    endpoint:\n        health:\n            show-details: when_authorized\n    info:\n        git:\n            mode: full\n    health:\n        mail:\n            enabled: false # When using the MailService, configure an SMTP server and set this to true\n    metrics:\n        enabled: false # http://micrometer.io/ is disabled by default, as we use http://metrics.dropwizard.io/ instead\n\nspring:\n    application:\n        name: product\n    jpa:\n        open-in-view: false\n        hibernate:\n            ddl-auto: update\n            naming:\n                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy\n                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy\n    messages:\n        basename: i18n/messages\n    mvc:\n        favicon:\n            enabled: false\n    thymeleaf:\n        mode: HTML\nsecurity:\n    oauth2:\n        resource:\n            filter-order: 3\n\nserver:\n    servlet:\n        session:\n            cookie:\n                http-only: true\n\n# Properties to be exposed on the /info management endpoint\ninfo:\n    # Comma separated list of profiles that will trigger the ribbon to show\n    display-ribbon-on-profiles: "dev"\n\n# ===================================================================\n# JHipster specific properties\n#\n# Full reference is available at: https://www.jhipster.tech/common-application-properties/\n# ===================================================================\n\njhipster:\n    async:\n        core-pool-size: 2\n        max-pool-size: 50\n        queue-capacity: 10000\n    # By default CORS is disabled. Uncomment to enable.\n    #cors:\n        #allowed-origins: "*"\n        #allowed-methods: "*"\n        #allowed-headers: "*"\n        #exposed-headers: "Authorization,Link,X-Total-Count"\n        #allow-credentials: true\n        #max-age: 1800\n    mail:\n        from: product@localhost\n    swagger:\n        default-include-pattern: /api/.*\n        title: product API\n        description: product API documentation\n        version: 0.0.1\n        terms-of-service-url:\n        contact-name:\n        contact-url:\n        contact-email:\n        license:\n        license-url:\n\n# ===================================================================\n# Application specific properties\n# Add your own application properties here, see the ApplicationProperties class\n# to have type-safe configuration, like in the JHipsterProperties above\n#\n# More documentation is available at:\n# https://www.jhipster.tech/common-application-properties/\n# ===================================================================\n\n# application:\n'}}},c=(t("t+xV"),Object(o.a)(l,function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"app-container"},[this._m(0),this._v(" "),n("Yaml",{attrs:{value:this.value,height:this.height}})],1)},[function(){var e=this.$createElement,n=this._self._c||e;return n("p",{staticClass:"warn-content"},[this._v("\n    Yaml编辑器 基于\n    "),n("a",{attrs:{href:"https://github.com/codemirror/CodeMirror",target:"_blank"}},[this._v("CodeMirror")]),this._v("，\n    主题预览地址 "),n("a",{attrs:{href:"https://codemirror.net/demo/theme.html#idea",target:"_blank"}},[this._v("Theme")])])}],!1,null,"cf587604",null));c.options.__file="YamlEdit.vue";n.default=c.exports},sQGf:function(e,n,t){},spx8:function(e,n,t){"use strict";var i=t("4rGO");t.n(i).a},"t+xV":function(e,n,t){"use strict";var i=t("sQGf");t.n(i).a}}]);